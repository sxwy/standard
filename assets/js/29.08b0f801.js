(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{309:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"组织结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组织结构"}},[s._v("#")]),s._v(" 组织结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"/standard/images/rules_project_structure_schema.jpg",alt:"structure.jpg"}})]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── dist "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("####################################### 构建输出路径")]),s._v("\n├── mock "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("####################################### 接口模拟配置")]),s._v("\n├── public "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################################### 静态资源（非打包）")]),s._v("\n├── src "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################################## 源代码")]),s._v("\n│   ├── api "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#################################### 网络请求层")]),s._v("\n│   ├── assets "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# 全局公共资源（打包）")]),s._v("\n│   │   ├── images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 图片资源")]),s._v("\n│   │   │   └── 模块_类别_功能_状态.扩展名\n│   │   └── fonts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## 字体资源")]),s._v("\n│   ├── components "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 全局公共组件")]),s._v("\n│   ├── config "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# 全局配置")]),s._v("\n│   ├── hooks "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 全局公共 Hooks")]),s._v("\n│   ├── pages/views "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 路由页面")]),s._v("\n│   │   ├── xxx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务模块")]),s._v("\n│   │   │   ├── xxx1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 业务组件子模块 1")]),s._v("\n│   │   │   ├── xxx2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 业务组件子模块 2")]),s._v("\n│   │   │   └── xxx3 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 业务组件子模块 3")]),s._v("\n│   │   ├── yyy "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务模块")]),s._v("\n│   │   └── zzz "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务模块")]),s._v("\n│   ├── "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务逻辑层")]),s._v("\n│   ├── store "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 全局状态管理")]),s._v("\n│   ├── types "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 全局公共类型")]),s._v("\n│   ├── utils "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 全局公共工具")]),s._v("\n│   ├── global.d.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 全局类型定义")]),s._v("\n│   └── main.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 应用入口")]),s._v("\n├── .editorconfig "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## 编辑器通用配置")]),s._v("\n├── .eslintrc.js "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### JS 审查配置")]),s._v("\n├── .gitignore "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# 版本管理配置")]),s._v("\n├── .npmrc "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################################### 依赖管理配置")]),s._v("\n├── .prettierrc.js "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 代码格式化配置")]),s._v("\n├── .stylelintrc.js "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 样式审查配置")]),s._v("\n├── README.md "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 项目开发说明")]),s._v("\n├── babel.config.js "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 编译配置")]),s._v("\n├── package-lock.json "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################## 依赖版本锁")]),s._v("\n├── package.json "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### 项目配置")]),s._v("\n└── tsconfig.json "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## TypeScript 配置")]),s._v("\n")])])]),t("h2",{attrs:{id:"静态资源-非打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态资源-非打包"}},[s._v("#")]),s._v(" 静态资源（非打包）")]),s._v(" "),t("p",[t("code",[s._v("./public/")]),s._v(" 用于放置非打包的静态资源，例如：HTML 模板、图片和字体等素材。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n├── public "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################################### 静态资源（非打包）")]),s._v("\n│   ├── static "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# 静态资源")]),s._v("\n│   │   ├── styles "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 样式资源")]),s._v("\n│   │   ├── fonts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## 字体资源")]),s._v("\n│   │   ├── images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 图片资源")]),s._v("\n│   │   └── sctipts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 脚本资源")]),s._v("\n│   └── index.html "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# HTML 模板")]),s._v("\n└──\n")])])]),t("p",[s._v("ps：一般静态资源都需要放在源代码中作为模块依赖引入，在使用前端工具构建打包后会进行自动优化（较小的资源转成 base64，较大的资源以源文件的形式拷贝到输出目录，且在资源文件名后追加 hash 值，所以和源代码里面的资源主要区别在于文件是否版本化管理了）。如果需要在代码里配置静态资源的访问路径，那么就可以把静态资源放在 "),t("code",[s._v("./public/")]),s._v(" 目录下，然后拼上站点地址即可访问图片，例如一些需要配置传给客户端的图标资源和分享图片。")]),s._v(" "),t("h2",{attrs:{id:"源代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源代码"}},[s._v("#")]),s._v(" 源代码")]),s._v(" "),t("p",[t("code",[s._v("./src/")]),s._v(" 用于放置源代码，其根目录下主要放置一些全局公共模块，除此之外是业务模块一般放在路由目录下，通常命名为 pages 或 views。")]),s._v(" "),t("h3",{attrs:{id:"网络请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络请求"}},[s._v("#")]),s._v(" 网络请求")]),s._v(" "),t("p",[s._v("网络请求层封装了不同域名或服务的网络请求实例，一般统一以域名维度划分且命名为 "),t("code",[s._v("xxxApi")]),s._v("，如果有些特定的服务需要特殊的拦截器和配置，那么可以按服务命名，例如 "),t("code",[s._v("memberApi")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src\n│   ├── api "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################################### 网络请求层")]),s._v("\n│   │   ├── baseApi "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# https://api.host.cn")]),s._v("\n│   │   ├── xxxApi "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## https://xxx-api.host.cn")]),s._v("\n│   │   ├── yyyApi "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## https://yyy-api.host.cn")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("ps：类似接口模拟配置，建议按下面的统一方式命名。")]),s._v(" "),t("ul",[t("li",[s._v("baseApi：https://api.host.cn")]),s._v(" "),t("li",[s._v("xxxApi：https://xxx-api.host.cn")]),s._v(" "),t("li",[s._v("yyyApi：https://yyy-api.host.cn")])]),s._v(" "),t("h3",{attrs:{id:"公共资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共资源"}},[s._v("#")]),s._v(" 公共资源")]),s._v(" "),t("p",[s._v("公共资源目录放置了全局可复用的静态资源，静态资源一把命名为 "),t("code",[s._v("模块_类别_功能_状态.扩展名")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src\n│   ├── api "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#################################### 网络请求层（封装了各个域名的请求工具哈数）")]),s._v("\n│   ├── assets "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# 静态资源目录（打包）")]),s._v("\n│   │   ├── images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 图片资源")]),s._v("\n│   │   │   └── 模块_类别_功能_状态.扩展名\n│   │   └── fonts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## 字体资源")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("h3",{attrs:{id:"公共组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共组件"}},[s._v("#")]),s._v(" 公共组件")]),s._v(" "),t("p",[s._v("公共组件层目录封装了全局通用的可复用组件，一般采用大驼峰命名法，例如 "),t("code",[s._v("Xyz")]),s._v("（个别技术栈需要区分命名，例如：uni-app 一般以 "),t("code",[s._v("c-")]),s._v(" 作为前缀，统一使用小写字母，多个单词使用连字符号）。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src\n│   ├── components "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# 公共组件目录")]),s._v("\n│   │   ├── Xxx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 公共组件模块")]),s._v("\n│   │   │   └── index.js\n│   │   ├── Yyy "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 公共组件模块")]),s._v("\n│   │   │   └── index.js\n│   │   └── index "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## 输出路径")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("h3",{attrs:{id:"公共配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共配置"}},[s._v("#")]),s._v(" 公共配置")]),s._v(" "),t("p",[s._v("公共配置层封装了全局公共的常量配置，其下的模块一般以小驼峰，一般以大写字母和下划线命名的变量形式输出。如果常量配置较多，可以按功能进行划分，例如：页面相关的变量放在 page 模块，站点地址相关的常量放在 site 目录下，其他不确定的统一放 constants 模块下。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src\n│   ├── config "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# 全局配置目录")]),s._v("\n│   │   ├── constants "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################## 不确定模块的常量配置")]),s._v("\n│   │   ├── page "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### 页面路由相关的常量配置")]),s._v("\n│   │   └── site "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### 站点地址相关的常量配置")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("h3",{attrs:{id:"公共-hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共-hooks"}},[s._v("#")]),s._v(" 公共 Hooks")]),s._v(" "),t("p",[s._v("公共 Hooks 目录主要针对 Hook API 的 react 和 vue 等框架，封装了全局公共的 Hook，一般命名为 "),t("code",[s._v("useXyz")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\n```shell\n├── src\n│   ├── hooks ################################## 全局公共 Hooks 目录\n│   │   └── useXyz\n├── ...\n")])])]),t("h3",{attrs:{id:"路由页面-业务模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由页面-业务模块"}},[s._v("#")]),s._v(" 路由页面（业务模块）")]),s._v(" "),t("p",[s._v("路由页面目录一般按业务模块进行划分（禁止按 UI 状态划分），模块目录以小写字母和连字符号组成，一般子路径等价于路由注册路径。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src\n│   ├── pages/views "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 路由页面目录")]),s._v("\n│   │   ├── xxx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务模块目录")]),s._v("\n│   │   │   ├── xxx-1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 业务子模块 1")]),s._v("\n│   │   │   ├── xxx-2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 业务子模块 2")]),s._v("\n│   │   │   ├── components "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################### 业务模块公共组件目录")]),s._v("\n│   │   │   │   ├── Xxx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################## 公共组件模块")]),s._v("\n│   │   │   │   │   └── index.js\n│   │   │   │   ├── Yyy "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################## 公共组件模块")]),s._v("\n│   │   │   │   │   └── index.js\n│   │   │   │   └── index "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###################### 输出路径")]),s._v("\n│   │   │   ├── images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################## 业务模块公共工具目录")]),s._v("\n│   │   │   ├── utils "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################## 业务模块公共工具目录")]),s._v("\n│   │   │   ├── index."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("tsx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################ 业务模块入口页面")]),s._v("\n│   │   │   ├── list."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("tsx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("vue"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################# 业务模块列表页面")]),s._v("\n│   │   │   ├── detail."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("tsx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############### 业务模块详情页面")]),s._v("\n│   │   │   ├── service.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################### 业务模块业务逻辑实现")]),s._v("\n│   │   │   └── type.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################## 业务模块类似定义")]),s._v("\n│   │   ├── yyy "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务员模块目录")]),s._v("\n│   │   └── zzz "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务员模块目录")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("要点：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("路由页面目录一定要按业务模块划分，不能以产品原型或设计的布局划分。")]),s._v(" "),t("p",[s._v("产品原型和设计一般变化频率较高，一个位置今天可能显示模块 A，明天可能显示模块 B。如果按显示去划分子目录，后期应对变化的扩展性会变得很差。此外，编码过程中一定要遵循低耦合高内聚的原则，同一个业务模块的功能应该放在同一个目录下，方便代码的重用和解耦。")])]),s._v(" "),t("li",[t("p",[s._v("模块目录和路由组件要以小写字母和连字符号命名，主要目的是为了区分非路由目录和组件，更加方便维护者知晓当前模块下有哪些路由，以及跟进路由快速定位源代码；")])]),s._v(" "),t("li",[t("p",[s._v("除了路由组件外，其他的代码按功能可以划分为 components、utils、service 和 type")]),s._v(" "),t("ul",[t("li",[s._v("components：该业务模块下可复用的公共组件")]),s._v(" "),t("li",[s._v("images：该业务模块下可复用的公共组件")]),s._v(" "),t("li",[s._v("utils：该业务模块下可复用的公共工具函数")]),s._v(" "),t("li",[s._v("service：该业务模块下的业务接口请求逻辑封装")]),s._v(" "),t("li",[s._v("type：该业务模块下的公共数据（业务和 UI 状态）类型")])])]),s._v(" "),t("li",[t("p",[s._v("模块可以互相嵌套，一个大模块下面包含多个子模块，子模块相关的实现放在主模块的子目录下。")])])]),s._v(" "),t("p",[s._v("ps：路由页面不仅仅是放置路由组件的，更应该是当做业务模块目录，不同业务模块的公共组件和 API 就应该放在该路由下的模块目录里，而不是全部都放在全局目录下。此外，如果有模块之间需要相互引用公共组件，如果该组件跟业务无关，那么可以提取到全局目录下，否则不允许路由模块之间的相互引用。")]),s._v(" "),t("p",[s._v("参考："),t("RouterLink",{attrs:{to:"/guide/project/structure-in-action.html"}},[s._v("项目结构优化实战")])],1),s._v(" "),t("h3",{attrs:{id:"业务逻辑层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#业务逻辑层"}},[s._v("#")]),s._v(" 业务逻辑层")]),s._v(" "),t("p",[s._v("业务逻辑层封装了全局可复用的业务逻辑(服务端的接口请求)，其下的文件按业务模块划分，一般命名为 "),t("code",[s._v("xxxService")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src\n│   ├── "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ 业务逻辑层")]),s._v("\n│   │   ├── abtestService.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################### AB 测试相关的公共业务逻辑")]),s._v("\n│   │   ├── memberService.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################### 会员相关的公共业务逻辑")]),s._v("\n│   │   └── userService.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##################### 用户相关的公共业务逻辑")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("要点：业务逻辑层主要是针对服务端接口调用的封装，需要在每个方法上提供好相关的接口文档链接、入参和返回说明。此外，在一些复杂的业务场景下需要组合多个接口调用，以及对接口返回值进行封装处理，统一业务数据模型。")]),s._v(" "),t("h3",{attrs:{id:"全局状态管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局状态管理"}},[s._v("#")]),s._v(" 全局状态管理")]),s._v(" "),t("p",[t("code",[s._v("./src/store")]),s._v(" 封装了全局状态管理模块。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################################## 源代码")]),s._v("\n│   ├── store "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 全局状态管理")]),s._v("\n│   │   ├── user.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 用户管理模块")]),s._v("\n│   │   └── index.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 对外输出模块")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("h3",{attrs:{id:"公共类型层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共类型层"}},[s._v("#")]),s._v(" 公共类型层")]),s._v(" "),t("p",[t("code",[s._v("./src/types")]),s._v(" 封装了全局公共的业务类型（类似于服务端的数据表实体），一般以业务模块划分供全局使用，也方便维护者快速熟悉业务。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("├── src "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("######################################## 源代码")]),s._v("\n│   ├── store "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## 全局状态管理")]),s._v("\n│   │   ├── member.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################## 会员业务类型")]),s._v("\n│   │   ├── user.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################ 用户业务类型")]),s._v("\n│   │   └── index.ts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### 对外输出模块")]),s._v("\n├── "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("要点：业务类型指的是跟业务相关的数据结构类型（使用 TS interface 定义），例如：会员模块相关的业务类型有会员卡类型，用户模块相关的业务类型有用户个人信息类型，用户会员信息类型等。不同的业务模块类型可以相互引用。")]),s._v(" "),t("h3",{attrs:{id:"公共工具层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共工具层"}},[s._v("#")]),s._v(" 公共工具层")]),s._v(" "),t("p",[t("code",[s._v("./src/utils")]),s._v(" 主要放置全局可复用的一些工具函数。")])])}),[],!1,null,null,null);t.default=n.exports}}]);